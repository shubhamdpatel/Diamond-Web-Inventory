/// This plugin for jQuery (1.7+) is created by Anders Fjällström - anders@morriz.net - http://www.morriz.net
/// For documentation see https://github.com/morriznet/jquery.inputfilter
/// The plugin is used to create filters for form input and textarea
/// Released under MIT license
/// ver 1.1
(function (n) { n.fn.inputfilter = function (t) { var i = n.extend({ allowNumeric: !0, allowText: !1, allowEnter: !0, allowCustom: [], regex: null, maxLength: null, actionLog: !1 }, t), r = function (n, t) { if (i.actionLog) { var r = "Charcode: " + n.which + " Char: " + String.fromCharCode(n.which) + (t.length != 0 ? " - " + t : ""); window.console && console.log(r) || alert(r) } }; return this.on("keypress change paste", function (t) { switch (t.type) { case "keypress": if (t.which == 0 || t.which == 8 || t.ctrlKey === !0) { r(t, "Match sys"); return } if (i.maxLength != null && n(this).val().length >= i.maxLength) { r(t, "Max length reached"); t.preventDefault(); return } if (i.allowEnter && t.which == 13) { r(t, "Match enter"); return } if (i.allowNumeric && String.fromCharCode(t.which).match(/[\d]/g) != null) { r(t, "Numeric match"); return } if (i.allowText && String.fromCharCode(t.which).match(/[a-z|å|ä|ö|A-Z|Å|Ä|Ö]/g) != null) { r(t, "Text match"); return } if (n.inArray(String.fromCharCode(t.which), i.allowCustom) != -1) { r(t, "Custom match"); return } if (i.regex != null && String.fromCharCode(t.which).match(i.regex) != null) { r(t, "Regex match"); return } r(t, "NO MATCH"); t.preventDefault(); break; default: var u = this, f = t.type; setTimeout(function () { var t = "", s = [44, 46, 47, 42, 43, 45, 63, 36, 94, 92], r, e, o; (i.allowNumeric && (t += (t.length != 0 ? "|" : "") + "0-9"), i.allowText && (t += (t.length != 0 ? "|" : "") + "a-z|å|ä|ö|A-Z|Å|Ä|Ö"), n(i.allowCustom).each(function () { t += (t.length != 0 ? "|" : "") + (n.inArray(String(this).charCodeAt(0), s) != -1 ? "\\" : "") + this }), i.allowEnter && (t += (t.length != 0 ? "|" : "") + "\n|\r"), t = "[" + t + "]" + (i.regex != null ? "|" + i.regex : ""), r = "", e = n(u).val(), n(String(e).match(new RegExp(t, "g"))).each(function () { r += this }), i.maxLength != null && r.length > i.maxLength && (r = r.substr(0, i.maxLength)), n(u).val(r), i.actionLog) && (o = "Type: " + f + " Regexp: " + t + " Input: " + e + " Output: " + r, window.console && console.log(o) || alert(o)) }, 0) } }) } })(jQuery);